{"version":3,"sources":["../src/updata.js"],"names":[],"mappings":";;AAEA,MAAM,KAAK,QAAQ,IAAR,CAAL;AACN,MAAM,OAAO,QAAQ,SAAR,EAAmB,IAAnB;AACb,MAAM,MAAM,QAAQ,YAAR,CAAN;AACN,MAAM,UAAU,QAAQ,WAAR,CAAV;AACN,MAAM,SAAS,QAAQ,UAAR,CAAT;AACN,MAAM,KAAK,QAAQ,aAAR,CAAL;;AAEN,MAAM,UAAU;AACd,WAAS,QAAQ,OAAR;AACT,SAAO,QAAQ,KAAR;CAFH;;AAKN,IAAI,CAAC,GAAG,UAAH,CAAc,QAAQ,QAAR,CAAf,EAAkC;AACpC,OAAK,IAAI,KAAJ,CAAU,CAAC,MAAD,GAAS,QAAQ,QAAR,EAAiB,WAA1B,CAAV,CAAL,EADoC;AAEpC,UAAQ,IAAR,GAFoC;AAGpC,UAAQ,IAAR,CAAa,CAAb,EAHoC;CAAtC;;AAMA,MAAM,eAAe,OAAO,UAAP,CAAkB,QAAQ,UAAR,CAAlB,CAClB,MADkB,CACX,QAAQ,MAAR,CADJ;;AAGN,MAAM,qBAAqB,SAAU,QAAQ,QAAR,KAAqB,QAArB,GACjC,MAAM,MAAN,CAAa,QAAQ,CAAC,aAAa,QAAb,CAAsB,IAAtB,CAAD,CADY,GAEjC,KAFiC;;AAIrC,MAAM,YAAY,QAAQ,IAAR,CAAa,MAAb,GAAsB,CAAtB,GACd,QAAQ,IAAR,GACA,mBAAmB,OAAO,YAAP,CAAoB,QAAQ,QAAR,CAAvC,CAFc;;AAIlB,UACG,GADH,CACO,QAAS,QAAQ,QAAR,GACV,GAAG,IAAH,CAAQ,IAAR,EAAc,OAAd,CADU,GAEV,GAAG,MAAH,CAAU,IAAV,EAAgB,QAAQ,GAAR,EAAa,OAA7B,CAFU,CADhB","file":"updata.js","sourcesContent":["\r\n\r\nconst fs = require('fs');\r\nconst echo = require('shelljs').echo;\r\nconst msg = require('./messages');\r\nconst options = require('./options');\r\nconst parser = require('./parser');\r\nconst hg = require('./mercurial');\r\n\r\nconst logging = {\r\n  verbose: options.verbose,\r\n  quiet: options.quiet,\r\n};\r\n\r\nif (!fs.existsSync(options.listFile)) {\r\n  echo(msg.error(`file (${options.listFile}) not found`));\r\n  options.help();\r\n  process.exit(1);\r\n}\r\n\r\nconst ignoredRepos = parser.ignoreFile(options.ignoreFile)\r\n  .concat(options.ignore);\r\n\r\nconst filterIgnoredRepos = repos => (options.listFile === '.hgsub'\r\n  ? repos.filter(repo => !ignoredRepos.includes(repo))\r\n  : repos);\r\n\r\nconst repoPaths = options.list.length > 0\r\n  ? options.list\r\n  : filterIgnoredRepos(parser.repoPathFile(options.listFile));\r\n\r\nrepoPaths\r\n  .map(path => (options.pullOnly\r\n    ? hg.pull(path, logging)\r\n    : hg.update(path, options.tag, logging)));\r\n"]}